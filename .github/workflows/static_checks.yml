name: ðŸ“Š Static Checks
on:
  workflow_call:

jobs:
  static-checks:
    name: Code style, file formatting, and docs
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Get changed files
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            files=$(git diff-tree --no-commit-id --name-only -r HEAD^1..HEAD 2> /dev/null || true)
          elif [ "${{ github.event_name }}" == "push" -a "${{ github.event.forced }}" == "false" -a "${{ github.event.created }}" == "false" ]; then
            files=$(git diff-tree --no-commit-id --name-only -r ${{ github.event.before }}..${{ github.event.after }} 2> /dev/null || true)
          fi
          files=$(echo "$files" | xargs -I {} sh -c 'echo "\"./{}\""' | tr '\n' ' ')
          echo "CHANGED_FILES=$files" >> $GITHUB_ENV
      
      # Removing other thirdparty folders locally so /godot/* and /src/* are the only ones considered
      - name: Cleanup files
        run: |
          rm -r bin
          rm -r game/bin
          rm -r game/addons
          rm -r godot-cpp/test
          rm -r thirdparty/emsdk
          rm -r thirdparty/imgui
          rm -r thirdparty/osxcross

      # This needs to happen before Python and npm execution; it must happen before any extra files are written.
      - name: .gitignore checks (gitignore_check.sh)
        run: |
          bash ./godot/misc/scripts/gitignore_check.sh

      - name: Style checks via pre-commit
        uses: pre-commit/action@v3.0.1
        with:
          extra_args: --files ${{ env.CHANGED_FILES }}

      - name: Class reference schema checks
        run: |
          sudo apt update
          sudo apt install -y libxml2-utils
          xmllint --quiet --noout --schema godot/doc/class.xsd godot/doc/classes/*.xml godot/modules/*/doc_classes/*.xml godot/platform/*/doc_classes/*.xml

      - name: Run C compiler on `gdextension_interface.h`
        run: |
          gcc -c godot/core/extension/gdextension_interface.h
